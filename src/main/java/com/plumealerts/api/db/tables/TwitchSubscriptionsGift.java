/*
 * This file is generated by jOOQ.
 */
package com.plumealerts.api.db.tables;


import com.plumealerts.api.db.Keys;
import com.plumealerts.api.db.Public;
import com.plumealerts.api.db.tables.records.TwitchSubscriptionsGiftRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TwitchSubscriptionsGift extends TableImpl<TwitchSubscriptionsGiftRecord> {

    private static final long serialVersionUID = 427663185;

    /**
     * The reference instance of <code>public.twitch_subscriptions_gift</code>
     */
    public static final TwitchSubscriptionsGift TWITCH_SUBSCRIPTIONS_GIFT = new TwitchSubscriptionsGift();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TwitchSubscriptionsGiftRecord> getRecordType() {
        return TwitchSubscriptionsGiftRecord.class;
    }

    /**
     * The column <code>public.twitch_subscriptions_gift.channel_id</code>.
     */
    public final TableField<TwitchSubscriptionsGiftRecord, String> CHANNEL_ID = createField("channel_id", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>public.twitch_subscriptions_gift.recipient_id</code>.
     */
    public final TableField<TwitchSubscriptionsGiftRecord, String> RECIPIENT_ID = createField("recipient_id", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>public.twitch_subscriptions_gift.time</code>.
     */
    public final TableField<TwitchSubscriptionsGiftRecord, Timestamp> TIME = createField("time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>public.twitch_subscriptions_gift.recipient_username</code>.
     */
    public final TableField<TwitchSubscriptionsGiftRecord, String> RECIPIENT_USERNAME = createField("recipient_username", org.jooq.impl.SQLDataType.VARCHAR(25).nullable(false), this, "");

    /**
     * The column <code>public.twitch_subscriptions_gift.sub_plan</code>.
     */
    public final TableField<TwitchSubscriptionsGiftRecord, String> SUB_PLAN = createField("sub_plan", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.twitch_subscriptions_gift.anonymous</code>.
     */
    public final TableField<TwitchSubscriptionsGiftRecord, Boolean> ANONYMOUS = createField("anonymous", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.twitch_subscriptions_gift.gifter_id</code>.
     */
    public final TableField<TwitchSubscriptionsGiftRecord, String> GIFTER_ID = createField("gifter_id", org.jooq.impl.SQLDataType.VARCHAR(36), this, "");

    /**
     * The column <code>public.twitch_subscriptions_gift.gifter_username</code>.
     */
    public final TableField<TwitchSubscriptionsGiftRecord, String> GIFTER_USERNAME = createField("gifter_username", org.jooq.impl.SQLDataType.VARCHAR(25), this, "");

    /**
     * The column <code>public.twitch_subscriptions_gift.gifter_display_name</code>.
     */
    public final TableField<TwitchSubscriptionsGiftRecord, String> GIFTER_DISPLAY_NAME = createField("gifter_display_name", org.jooq.impl.SQLDataType.VARCHAR(36), this, "");

    /**
     * Create a <code>public.twitch_subscriptions_gift</code> table reference
     */
    public TwitchSubscriptionsGift() {
        this(DSL.name("twitch_subscriptions_gift"), null);
    }

    /**
     * Create an aliased <code>public.twitch_subscriptions_gift</code> table reference
     */
    public TwitchSubscriptionsGift(String alias) {
        this(DSL.name(alias), TWITCH_SUBSCRIPTIONS_GIFT);
    }

    /**
     * Create an aliased <code>public.twitch_subscriptions_gift</code> table reference
     */
    public TwitchSubscriptionsGift(Name alias) {
        this(alias, TWITCH_SUBSCRIPTIONS_GIFT);
    }

    private TwitchSubscriptionsGift(Name alias, Table<TwitchSubscriptionsGiftRecord> aliased) {
        this(alias, aliased, null);
    }

    private TwitchSubscriptionsGift(Name alias, Table<TwitchSubscriptionsGiftRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TwitchSubscriptionsGift(Table<O> child, ForeignKey<O, TwitchSubscriptionsGiftRecord> key) {
        super(child, key, TWITCH_SUBSCRIPTIONS_GIFT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TwitchSubscriptionsGiftRecord> getPrimaryKey() {
        return Keys.TWITCH_SUBSCRIPTIONS_GIFT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TwitchSubscriptionsGiftRecord>> getKeys() {
        return Arrays.<UniqueKey<TwitchSubscriptionsGiftRecord>>asList(Keys.TWITCH_SUBSCRIPTIONS_GIFT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TwitchSubscriptionsGiftRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TwitchSubscriptionsGiftRecord, ?>>asList(Keys.TWITCH_SUBSCRIPTIONS_GIFT__TWITCH_SUBSCRIPTIONS_GIFT_CHANNEL_ID_FKEY);
    }

    public Users users() {
        return new Users(this, Keys.TWITCH_SUBSCRIPTIONS_GIFT__TWITCH_SUBSCRIPTIONS_GIFT_CHANNEL_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TwitchSubscriptionsGift as(String alias) {
        return new TwitchSubscriptionsGift(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TwitchSubscriptionsGift as(Name alias) {
        return new TwitchSubscriptionsGift(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TwitchSubscriptionsGift rename(String name) {
        return new TwitchSubscriptionsGift(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TwitchSubscriptionsGift rename(Name name) {
        return new TwitchSubscriptionsGift(name, null);
    }
}
