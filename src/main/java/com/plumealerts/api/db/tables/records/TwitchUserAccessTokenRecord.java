/*
 * This file is generated by jOOQ.
 */
package com.plumealerts.api.db.tables.records;


import com.plumealerts.api.db.tables.TwitchUserAccessToken;

import java.time.OffsetDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TwitchUserAccessTokenRecord extends UpdatableRecordImpl<TwitchUserAccessTokenRecord> implements Record5<String, String, String, OffsetDateTime, OffsetDateTime> {

    private static final long serialVersionUID = 2092359416;

    /**
     * Setter for <code>public.twitch_user_access_token.user_id</code>.
     */
    public void setUserId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.twitch_user_access_token.user_id</code>.
     */
    public String getUserId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.twitch_user_access_token.access_token</code>.
     */
    public void setAccessToken(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.twitch_user_access_token.access_token</code>.
     */
    public String getAccessToken() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.twitch_user_access_token.refresh_token</code>.
     */
    public void setRefreshToken(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.twitch_user_access_token.refresh_token</code>.
     */
    public String getRefreshToken() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.twitch_user_access_token.expired_at</code>.
     */
    public void setExpiredAt(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.twitch_user_access_token.expired_at</code>.
     */
    public OffsetDateTime getExpiredAt() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for <code>public.twitch_user_access_token.last_validated</code>.
     */
    public void setLastValidated(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.twitch_user_access_token.last_validated</code>.
     */
    public OffsetDateTime getLastValidated() {
        return (OffsetDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, String, String, OffsetDateTime, OffsetDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TwitchUserAccessToken.TWITCH_USER_ACCESS_TOKEN.USER_ID;
    }

    @Override
    public Field<String> field2() {
        return TwitchUserAccessToken.TWITCH_USER_ACCESS_TOKEN.ACCESS_TOKEN;
    }

    @Override
    public Field<String> field3() {
        return TwitchUserAccessToken.TWITCH_USER_ACCESS_TOKEN.REFRESH_TOKEN;
    }

    @Override
    public Field<OffsetDateTime> field4() {
        return TwitchUserAccessToken.TWITCH_USER_ACCESS_TOKEN.EXPIRED_AT;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return TwitchUserAccessToken.TWITCH_USER_ACCESS_TOKEN.LAST_VALIDATED;
    }

    @Override
    public String component1() {
        return getUserId();
    }

    @Override
    public String component2() {
        return getAccessToken();
    }

    @Override
    public String component3() {
        return getRefreshToken();
    }

    @Override
    public OffsetDateTime component4() {
        return getExpiredAt();
    }

    @Override
    public OffsetDateTime component5() {
        return getLastValidated();
    }

    @Override
    public String value1() {
        return getUserId();
    }

    @Override
    public String value2() {
        return getAccessToken();
    }

    @Override
    public String value3() {
        return getRefreshToken();
    }

    @Override
    public OffsetDateTime value4() {
        return getExpiredAt();
    }

    @Override
    public OffsetDateTime value5() {
        return getLastValidated();
    }

    @Override
    public TwitchUserAccessTokenRecord value1(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public TwitchUserAccessTokenRecord value2(String value) {
        setAccessToken(value);
        return this;
    }

    @Override
    public TwitchUserAccessTokenRecord value3(String value) {
        setRefreshToken(value);
        return this;
    }

    @Override
    public TwitchUserAccessTokenRecord value4(OffsetDateTime value) {
        setExpiredAt(value);
        return this;
    }

    @Override
    public TwitchUserAccessTokenRecord value5(OffsetDateTime value) {
        setLastValidated(value);
        return this;
    }

    @Override
    public TwitchUserAccessTokenRecord values(String value1, String value2, String value3, OffsetDateTime value4, OffsetDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TwitchUserAccessTokenRecord
     */
    public TwitchUserAccessTokenRecord() {
        super(TwitchUserAccessToken.TWITCH_USER_ACCESS_TOKEN);
    }

    /**
     * Create a detached, initialised TwitchUserAccessTokenRecord
     */
    public TwitchUserAccessTokenRecord(String userId, String accessToken, String refreshToken, OffsetDateTime expiredAt, OffsetDateTime lastValidated) {
        super(TwitchUserAccessToken.TWITCH_USER_ACCESS_TOKEN);

        set(0, userId);
        set(1, accessToken);
        set(2, refreshToken);
        set(3, expiredAt);
        set(4, lastValidated);
    }
}
