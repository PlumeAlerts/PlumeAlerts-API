/*
 * This file is generated by jOOQ.
 */
package com.plumealerts.api.db;


import com.plumealerts.api.db.tables.*;
import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;

import javax.annotation.Generated;


/**
 * A class modelling indexes of tables of the <code>public</code> schema.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index SCOPES_PKEY = Indexes0.SCOPES_PKEY;
    public static final Index TWITCH_BITS_PKEY = Indexes0.TWITCH_BITS_PKEY;
    public static final Index TWITCH_FOLLOWERS_PKEY = Indexes0.TWITCH_FOLLOWERS_PKEY;
    public static final Index TWITCH_USER_ACCESS_TOKEN_PKEY = Indexes0.TWITCH_USER_ACCESS_TOKEN_PKEY;
    public static final Index USER_ACCESS_TOKEN_PKEY = Indexes0.USER_ACCESS_TOKEN_PKEY;
    public static final Index USER_LOGIN_REQUEST_PKEY = Indexes0.USER_LOGIN_REQUEST_PKEY;
    public static final Index USERS_PKEY = Indexes0.USERS_PKEY;
    public static final Index USERS_PUBSUB_PKEY = Indexes0.USERS_PUBSUB_PKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index SCOPES_PKEY = Internal.createIndex("scopes_pkey", Scopes.SCOPES, new OrderField[]{Scopes.SCOPES.SCOPE}, true);
        public static Index TWITCH_BITS_PKEY = Internal.createIndex("twitch_bits_pkey", TwitchBits.TWITCH_BITS, new OrderField[]{TwitchBits.TWITCH_BITS.MESSAGE_ID}, true);
        public static Index TWITCH_FOLLOWERS_PKEY = Internal.createIndex("twitch_followers_pkey", TwitchFollowers.TWITCH_FOLLOWERS, new OrderField[]{TwitchFollowers.TWITCH_FOLLOWERS.CHANNEL_ID, TwitchFollowers.TWITCH_FOLLOWERS.FOLLOWER_ID, TwitchFollowers.TWITCH_FOLLOWERS.FOLLOWED_AT}, true);
        public static Index TWITCH_USER_ACCESS_TOKEN_PKEY = Internal.createIndex("twitch_user_access_token_pkey", TwitchUserAccessToken.TWITCH_USER_ACCESS_TOKEN, new OrderField[]{TwitchUserAccessToken.TWITCH_USER_ACCESS_TOKEN.USER_ID}, true);
        public static Index USER_ACCESS_TOKEN_PKEY = Internal.createIndex("user_access_token_pkey", UserAccessToken.USER_ACCESS_TOKEN, new OrderField[]{UserAccessToken.USER_ACCESS_TOKEN.USER_ID, UserAccessToken.USER_ACCESS_TOKEN.ACCESS_TOKEN}, true);
        public static Index USER_LOGIN_REQUEST_PKEY = Internal.createIndex("user_login_request_pkey", UserLoginRequest.USER_LOGIN_REQUEST, new OrderField[]{UserLoginRequest.USER_LOGIN_REQUEST.STATE, UserLoginRequest.USER_LOGIN_REQUEST.CREATED_AT}, true);
        public static Index USERS_PKEY = Internal.createIndex("users_pkey", Users.USERS, new OrderField[]{Users.USERS.ID}, true);
        public static Index USERS_PUBSUB_PKEY = Internal.createIndex("users_pubsub_pkey", UsersPubsub.USERS_PUBSUB, new OrderField[]{UsersPubsub.USERS_PUBSUB.USER_ID, UsersPubsub.USERS_PUBSUB.TYPE}, true);
    }
}
